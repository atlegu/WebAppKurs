import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://tqpryezzddufpovfbpld.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRxcHJ5ZXp6ZGR1ZnBvdmZicGxkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0NjA5MDksImV4cCI6MjA2NzAzNjkwOX0.TYmpggmCUr_7aNN_KKC5igvyT_QOWjFpa4_wlX_hjpE';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Module 7.2 content
const module72Content = {
  sections: [
    {
      title: "Kontantstr√∏mmer - Hva teller?",
      type: "content",
      content: `**Grunnlaget for all investeringsanalyse**

Den viktigste jobben i investeringsanalyse er √• identifisere de riktige kontantstr√∏mmene. Gj√∏r du feil her, blir hele analysen feil - uansett hvor sofistikerte beregninger du gj√∏r etterp√•.

!component:cash-flow-identifier

**Hva er en kontantstr√∏m?**

En kontantstr√∏m er ganske enkelt penger som g√•r inn eller ut av bedriften. Det h√∏res banalt ut, men det er overraskende lett √• gj√∏re feil. La oss starte med hovedregelen:

**Hovedregelen: F√∏lg pengene!**
Hvis investeringen f√∏rer til at bedriften mottar eller betaler penger, er det en relevant kontantstr√∏m. Hvis ikke, er det ikke relevant for investeringsanalysen.

**De fem kategoriene av kontantstr√∏mmer**

**1. Investeringskostnader**
Dette er vanligvis den st√∏rste utbetalingen og kommer ofte i starten:
‚Ä¢ Kj√∏p av maskiner, utstyr eller bygninger
‚Ä¢ Installasjon og oppstartskostnader
‚Ä¢ Oppl√¶ring av ansatte
‚Ä¢ Konsulentbistand for implementering

**2. Driftskontantstr√∏mmer**
De l√∏pende inn- og utbetalingene fra prosjektet:
‚Ä¢ Salgsinntekter (kontante eller n√•r kunden betaler)
‚Ä¢ R√•varekostnader
‚Ä¢ L√∏nnskostnader
‚Ä¢ Andre driftskostnader (str√∏m, vedlikehold, etc.)

**3. Skatteeffekter**
Skatt er en reell utbetaling som m√• beregnes riktig:
‚Ä¢ Skatt p√• overskudd fra prosjektet
‚Ä¢ Skattefordel av avskrivninger (selv om avskrivninger ikke er kontantstr√∏m)
‚Ä¢ Eventuell utsatt skatt

**4. Arbeidskapitalendringer**
Ofte oversett, men kritisk viktig:
‚Ä¢ √òkt behov for varelager
‚Ä¢ √òkte kundefordringer (kunder betaler senere)
‚Ä¢ √òkt leverand√∏rgjeld (vi betaler senere)
‚Ä¢ Frigj√∏ring av arbeidskapital ved prosjektslutt

**5. Restverdi/Salgsverdi**
Hva skjer p√• slutten av prosjektet?
‚Ä¢ Salgsverdi av utstyr
‚Ä¢ Skatt p√• gevinst/tap ved salg
‚Ä¢ Oppryddingskostnader
‚Ä¢ Frigjort arbeidskapital

**Den kritiske skatteberegningen**

Mange blir forvirret av forholdet mellom avskrivninger og kontantstr√∏m. La oss klargj√∏re:

**Avskrivninger er IKKE en kontantstr√∏m!**
Men de p√•virker skatten, som ER en kontantstr√∏m.

Eksempel:
\`\`\`
Salgsinntekter:           1 000 000 kr  (kontantstr√∏m inn)
- Driftskostnader:          400 000 kr  (kontantstr√∏m ut)
= Kontantstr√∏m f√∏r skatt:   600 000 kr

For skatteberegning:
Kontantstr√∏m f√∏r skatt:     600 000 kr
- Avskrivninger:            200 000 kr  (ikke kontantstr√∏m!)
= Skattbart overskudd:      400 000 kr
√ó Skattesats (22%):          88 000 kr  (kontantstr√∏m ut)

Netto kontantstr√∏m:         512 000 kr
\`\`\`

**Vanlige fallgruver - "Spot the pitfall"**

**1. Sunk Costs - Den klassiske feilen**
"Vi har allerede brukt 2 millioner p√• markedsunders√∏kelser, s√• vi m√• gjennomf√∏re prosjektet!"

NEI! Sunk costs er irrelevante. De er allerede betalt og kan ikke p√•virkes av beslutningen.

**2. Finansieringskostnader - Hold dem utenfor**
Renter og avdrag p√• l√•n skal IKKE inkluderes. Hvorfor? Fordi finansieringen h√•ndteres gjennom avkastningskravet (diskonteringsrenten).

**3. Allokerte felleskostnader - V√¶r forsiktig**
"Prosjektet m√• b√¶re sin del av konsernets administrasjonskostnader."

Sp√∏rsm√•let er: √òker de faktiske kostnadene? Hvis ikke, skal de ikke med.

**4. Alternativkostnader - Glem dem ikke**
Hvis du bruker en bygning til prosjektet som alternativt kunne v√¶rt leid ut for 100 000 kr/m√•ned, er dette en reell kostnad som m√• inkluderes.

**5. Bokf√∏rte vs. faktiske kostnader**
Regnskapet kan vise kostnader som ikke er kontantstr√∏mmer:
‚Ä¢ Avsetninger
‚Ä¢ Nedskrivninger  
‚Ä¢ Periodiseringer

Ignorer disse - f√∏lg pengene!

**Arbeidskapital - Den ofte glemte komponenten**

N√•r aktiviteten √∏ker, bindes ofte mer kapital:

**Typisk eksempel:**
‚Ä¢ √òkt salg ‚Üí Flere kundefordringer (de betaler om 30 dager)
‚Ä¢ √òkt produksjon ‚Üí St√∏rre varelager
‚Ä¢ √òkt innkj√∏p ‚Üí Mer leverand√∏rgjeld (vi betaler om 30 dager)

**Netto √∏kning i arbeidskapital = Kontantstr√∏m ut**

Husk: Arbeidskapitalen frigj√∏res vanligvis ved prosjektslutt!

**Praktisk fremgangsm√•te**

**Steg 1: List alle inn- og utbetalinger**
Start bredt - list alt du kan tenke p√•.

**Steg 2: Filtrer med sp√∏rsm√•let**
"F√∏rer dette til at penger g√•r inn eller ut?" Hvis nei, stryk det.

**Steg 3: Plasser i tidslinje**
N√•r skjer betalingen? √Ör 0, 1, 2...?

**Steg 4: Beregn skatteeffekter**
Husk at avskrivninger p√•virker skatten.

**Steg 5: Dobbeltsjekk for vanlige feil**
Har du med sunk costs? Finansiering? Glemte du arbeidskapital?

**Eksempel: Ny produksjonslinje**

La oss se p√• et komplett eksempel:

**√Ör 0:**
‚Ä¢ Kj√∏p av utstyr: -5 000 000 kr
‚Ä¢ Installasjon: -500 000 kr
‚Ä¢ √òkt arbeidskapital: -800 000 kr
‚Ä¢ **Total: -6 300 000 kr**

**√Ör 1-10:**
‚Ä¢ √òkte salgsinntekter: +2 500 000 kr
‚Ä¢ √òkte driftskostnader: -1 200 000 kr
‚Ä¢ Avskrivninger: -550 000 kr (for skatteberegning)
‚Ä¢ Skatt (22% av 750 000): -165 000 kr
‚Ä¢ **√Örlig kontantstr√∏m: +1 135 000 kr**

**√Ör 10 (i tillegg):**
‚Ä¢ Salg av utstyr: +500 000 kr
‚Ä¢ Skatt p√• gevinst: -110 000 kr
‚Ä¢ Frigjort arbeidskapital: +800 000 kr
‚Ä¢ **Ekstra i √•r 10: +1 190 000 kr**

**Oppsummering - Huskeliste**

‚úÖ **Ta med:**
- Alle faktiske inn- og utbetalinger
- Skatteeffekter (inkl. effekt av avskrivninger)
- Arbeidskapitalendringer
- Alternativkostnader
- Restverdi

‚ùå **Ikke ta med:**
- Sunk costs
- Finansieringskostnader
- Kun regnskapsmessige poster
- Allokerte kostnader (hvis de ikke √∏ker)
- Ikke-kontante poster

**Neste steg**

N√•r du har identifisert alle relevante kontantstr√∏mmer og plassert dem i en tidslinje, er du klar for neste steg: √Ö beregne n√•verdien av disse kontantstr√∏mmene. Det er tema for neste del!

**üéØ Husk alltid: F√∏lg pengene! Hvis det ikke er en faktisk inn- eller utbetaling, h√∏rer det ikke hjemme i investeringsanalysen.**

**Refleksjonssp√∏rsm√•l:** Mange bedrifter glemmer √• ta med arbeidskapitalendringer i sine investeringsanalyser. Hvorfor tror du dette skjer s√• ofte, og hva kan konsekvensene v√¶re av √• glemme det?`
    }
  ]
};

async function addModule72() {
  try {
    // Find module 7
    const { data: module7, error: moduleError } = await supabase
      .from('modules')
      .select('id')
      .eq('order_index', 7)
      .single();

    if (moduleError) {
      console.error('Error fetching module 7:', moduleError);
      return;
    }

    console.log('Found module 7 with id:', module7.id);

    // Check if sub-module 7.2 already exists
    const { data: existingSubModule, error: fetchError } = await supabase
      .from('sub_modules')
      .select('*')
      .eq('module_id', module7.id)
      .eq('order_index', 2)
      .single();

    if (fetchError && fetchError.code !== 'PGRST116') {
      console.error('Error fetching sub-module:', fetchError);
      return;
    }

    if (existingSubModule) {
      // Update existing sub-module
      const { error: updateError } = await supabase
        .from('sub_modules')
        .update({ 
          title: 'Kontantstr√∏mmer - Hva teller?',
          content: module72Content,
          updated_at: new Date().toISOString()
        })
        .eq('id', existingSubModule.id);

      if (updateError) {
        console.error('Error updating sub-module 7.2:', updateError);
      } else {
        console.log('Successfully updated sub-module 7.2');
      }
    } else {
      // Create new sub-module
      const { error: insertError } = await supabase
        .from('sub_modules')
        .insert({
          module_id: module7.id,
          title: 'Kontantstr√∏mmer - Hva teller?',
          content: module72Content,
          order_index: 2,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        });

      if (insertError) {
        console.error('Error creating sub-module 7.2:', insertError);
      } else {
        console.log('Successfully created sub-module 7.2');
      }
    }
  } catch (error) {
    console.error('Unexpected error:', error);
  }
}

addModule72();